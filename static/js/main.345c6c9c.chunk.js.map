{"version":3,"sources":["knownFunctions.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["colorCodes","0","3","65535","emotes","2","4","5","6","7","9","11","12","13","14","15","16","17","18","20","21","23","24","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","46","47","49","50","51","52","53","54","55","56","57","58","59","getArgName","map","id","default_","undefined","knownFuncs","args","hint","i","String","fromCodePoint","10","length","known","256","512","1024","90","110","1","115","getFuncStr","func","ans","join","MessagePack","require","initialize","decode","encode","a","fetch","res","arrayBuffer","buf","console","log","Buffer","from","FileEntry","ind","this","props","data","x","push","key","className","showFuncs","name","React","Component","File","state","open","onClick","setState","Folder","openDefault","children","d","Object","keys","App","info","getData","then","catch","r","type","checked","onChange","htmlFor","style","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.345c6c9c.chunk.js","sourcesContent":["const colorCodes = {\r\n    0: \"#22ABBD\", \r\n    3: \"#F28903\", \r\n    65535: \"reset\"\r\n  };\r\nconst emotes = {\r\n  0: \"neutral\",\r\n  2: \"happiness\",\r\n  3: \"joy\",\r\n  4: \"love\",\r\n  5: \"sheepishness\",\r\n  6: \"happiness-like\",\r\n  7: \"shine with happy\",\r\n  9: \"aggrivation\",\r\n  11: \"worry\",\r\n  12: \"sighing\",\r\n  13: \"thought\",\r\n  14: \"sadness\",\r\n  15: \"distress\",\r\n  16: \"sorrow\",\r\n  17: \"heartbreak\",\r\n  18: \"resignation\",\r\n  20: \"laughter\",\r\n  21: \"glee\",\r\n  23: \"flourish\",\r\n  24: \"showmanship\",\r\n  26: \"amazed\",\r\n  27: \"surprise\",\r\n  28: \"shocked-like\",\r\n  29: \"shocked\",\r\n  30: \"inspiration\",\r\n  31: \"mistaken\",\r\n  32: \"lightly amazed\",\r\n  33: \"encouraging\",\r\n  34: \"greetings\",\r\n  35: \"apologetic\",\r\n  36: \"pleased\",\r\n  37: \"agreement\",\r\n  38: \"curiosity\",\r\n  39: \"disagreement\",\r\n  40: \"confident\",\r\n  41: \"explaining\",\r\n  42: \"cold chill\",\r\n  43: \"fearful\",\r\n  44: \"sneezing\",\r\n  46: \"sleepy\",\r\n  47: \"dozing\",\r\n  49: \"daydreaming\",\r\n  50: \"bashfulness\",\r\n  51: \"mischief\",\r\n  52: \"shyness\",\r\n  53: \"pride\",\r\n  54: \"smirking\",\r\n  55: \"eyes to the side\",\r\n  56: \"arms close, eyes up, frown\",\r\n  57: \"intense-like\",\r\n  58: \"intense\",\r\n  59: \"bewilderment\"\r\n};\r\n\r\ninterface FunctionArgMap {\r\n  [id: number]: any\r\n}\r\n\r\nfunction getArgName(map: FunctionArgMap, id: number, default_?: any) {\r\n  if (id in map) return map[id];\r\n  return default_ === undefined ? id : default_;\r\n}\r\n\r\nexport const knownFuncs = {\r\n  0: function(args: number[]) {\r\n    if (args[0] === 0) {\r\n      let hint = \"\";\r\n      for (let i = 0;  i < args[2] / 2; i++) hint += String.fromCodePoint(args[3+i]);\r\n      return \"displayHint(\"+args[1]+\" chars, \\\"\"+hint+\"\\\")\";\r\n    }\r\n    if (args[0] === 2) return \"setTextSize(\"+args[1]+\")\";\r\n    if (args[0] === 3) {\r\n      const colorNum = args[1];\r\n      let colorCode = getArgName(colorCodes, args[1]);\r\n      return \"setTextColor(\"+colorCode+\")\";\r\n    }\r\n    if (args[0] === 4) return \"nextPage()\";\r\n    return null;\r\n  },\r\n  10: function(args: number[]) {\r\n    if (args[0] === 2) return \"shortPause()\";\r\n    return null;\r\n  },\r\n  40: function(args: number[]) {\r\n    if (args[1] === 52480 && args[2] == 0) return \"emote(\"+getArgName(emotes, args[0])+\")\";\r\n    return null;\r\n  },\r\n  50: function(args: number[]) {\r\n    if (args[0] === 0 && args.length === 3 && args[2] === 52483) {\r\n      const known = {256: \"singular indefinite consonant\", 512: \"singular indefinite vowel\", 1024: \"plural\"}\r\n      let str = getArgName(known, args[1], null);\r\n      if (str === null) return null;\r\n      return \"wordInfo(\"+(known as any)[args[1]]+\")\";\r\n    }\r\n    if (args.length === 1 && args[0] === 2) return \"getWordArticle()\";\r\n    return null;\r\n  },\r\n  90: function(args: number[]) {\r\n    if (args[1] === 0 && args.length === 2) {\r\n      const known = {\r\n        2: \"item present in storage/pockets\",\r\n        17: \"bells\",\r\n        20: \"Daisy turnip price\",\r\n        21: \"price offered to buy item\",\r\n        26: \"Daisy turnip price\"\r\n      };\r\n      let name = getArgName(known, args[0]);\r\n      return \"getNum(\"+name+\")\";\r\n    }\r\n    if (args[1] === 52480) {\r\n      const known = {\r\n        35: \"month\",\r\n        36: \"day\",\r\n        37: \"hour\",\r\n        38: \"minute\"\r\n      };\r\n      let name = getArgName(known, args[0]);\r\n      return \"getVal(\"+name+\")\";\r\n    }\r\n    return null;\r\n  },\r\n  110: function(args: number[]) {\r\n    if (args.length === 1) {\r\n      const known = {\r\n        0: \"\\\"...\\\"\",\r\n        1: \"player name\",\r\n        3: \"nickname\",\r\n        5: \"catchphrase\",\r\n        9: \"player's island\"\r\n      };\r\n      let name = getArgName(known, args[0]);\r\n      return \"getStr(\"+name+\")\";\r\n    }\r\n    return null;\r\n  },\r\n  115: function(args: number[]) {\r\n    if (args.length === 1) {\r\n      const known = {\r\n        0: \"some player name\",\r\n        1: \"some player name\",\r\n        2: \"some island name\"\r\n      }\r\n      let name = getArgName(known, args[0]);\r\n      return \"getStr(\"+name+\")\";\r\n    }\r\n    return null;\r\n  }\r\n}\r\n\r\nexport function getFuncStr(func: any[]) {\r\n  if (func[0] in knownFuncs) {\r\n    let ans = (knownFuncs as any)[func[0]](func[1]);\r\n    if (ans !== null) return ans;\r\n  }\r\n  return \"F\"+func[0]+\"(\"+func[1].join(\", \")+\")\";\r\n}","import React from 'react';\nimport './App.css';\nimport { getFuncStr } from \"./knownFunctions\";\n\nconst MessagePack = require(\"what-the-pack\");\nconst {encode, decode} = MessagePack.initialize(2**1);\n\nlet words = 0;\n\n\nasync function getData() {\n  let res = await fetch(\"/ACNHDialog/clean.mp\");\n  let buf = await res.arrayBuffer();\n  console.log(buf);\n  return decode(MessagePack.Buffer.from(buf));\n}\n\ninterface AppState {\n  data: {\n    info: string\n  } | Array<any>;\n  showFuncs: boolean;\n}\n\ninterface FileEntryProps {\n  name: string;\n  data: any[];\n  showFuncs: boolean;\n}\n\nclass FileEntry extends React.Component<FileEntryProps> {\n  render() {\n    let ans = [];\n    let ind = 0;\n    for (let x of this.props.data) {\n      if (\"0\" in x) {\n        ans.push(<div key={ind++} className=\"text\">{x[0]}</div>);\n      }\n      if (\"1\" in x && this.props.showFuncs) {\n        ans.push(<div key={ind++} className=\"func\">{getFuncStr(x[1])}</div>)\n      }\n      if (\"2\" in x && this.props.showFuncs) {\n        ans.push(<div key={ind++} className=\"func special\">SF({x[2][0]}, {x[2][1]})</div>)\n      }\n    }\n    return <li className=\"entry\">\n      <div className=\"name\">{this.props.name}</div>\n      <div className=\"val\">{ans}</div>\n    </li>\n  }\n}\n\ninterface FileProps {\n  name: string;\n  data: any[];\n  showFuncs: boolean;\n}\n\ninterface FileState {\n  open: boolean;\n}\n\nclass File extends React.Component<FileProps, FileState> {\n\n  constructor(props: FileProps) {\n    super(props);\n    this.state = {open: false};\n  }\n\n  render() {\n    let ans = null;\n    if (this.state.open) {\n      ans = [];\n      for (let x of this.props.data[0]) {\n        ans.push(<FileEntry key={x[0]} name={x[0]} data={x[1]} showFuncs={this.props.showFuncs} />)\n      }\n    }\n  \n    return <li>\n      <div className=\"clickable\" onClick={() => this.setState({open: !this.state.open})}>{this.props.name}</div>\n      <ul>\n        {ans}\n      </ul>\n      \n    </li>\n  }\n\n}\n\ninterface FolderProps {\n  name: string;\n  data: any[];\n  showFuncs: boolean;\n  openDefault?: boolean;\n}\n\ninterface FolderState {\n  open: boolean;\n}\n\nclass Folder extends React.Component<FolderProps, FolderState> {\n\n  constructor(props: FolderProps) {\n    super(props);\n    this.state = {open: this.props.openDefault ? this.props.openDefault : false};\n  }\n\n  render() {\n    let children = null;\n    let d = this.props.data;\n    if (this.state.open) {\n      children = [];\n      for (let name of Object.keys(d[0])) {\n        children.push(<Folder key={children.length} name={name} data={d[0][name]} showFuncs={this.props.showFuncs} />);\n      }\n      for (let name of Object.keys(d[1])) {\n        children.push(<File key={children.length} name={name} data={d[1][name]} showFuncs={this.props.showFuncs} />);\n      }\n    }\n    return <li>\n      <div className=\"clickable\" onClick={() => this.setState({open: !this.state.open})}>{this.props.name}</div>\n        <ul>\n          {children}\n        </ul>\n    </li>\n  }\n}\n\nclass App extends React.Component<{}, AppState> {\n  constructor(props: {}) {\n    super(props);\n    this.state = {data: {info: \"loading\"}, showFuncs: true};\n    \n  }\n\n  componentDidMount() {\n    getData().then(d => {\n      this.setState({data: d});\n    }).catch(r => {\n      console.log(r);\n    });\n  }\n\n\n  render() {\n    if (\"info\" in this.state.data) {\n      return <div>Loading</div>\n    }\n    return <div>\n      <input type=\"checkbox\" id=\"showFuncs\" checked={this.state.showFuncs} onChange={() => this.setState({showFuncs: !this.state.showFuncs})}></input>\n      <label htmlFor=\"showFuncs\">Show Functions</label>\n      <ul className=\"tree-view\" style={{minHeight: \"50%\"}}>\n        <Folder name=\"/\" data={this.state.data} openDefault={true} showFuncs={this.state.showFuncs} />\n      </ul>\n    </div>\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}